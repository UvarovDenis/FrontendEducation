{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Documents/React Projects/test-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\n//components\nimport Header from \"./components/Header\";\nimport Todo from \"./components/Todo\";\nimport Form from './components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const baseURL = \"https://dummyjson.com/todos/\";\n  const [todoList, setToDoList] = useState([]);\n  const [filter, setChecked] = useState(false);\n  const fetchList = () => {\n    axios.get(baseURL).then(response => {\n      setToDoList(response.data.todos);\n    }).catch(error => {\n      alert(\"Server error: \" + error);\n      setToDoList([]);\n    });\n  };\n  const completeTask = id => {\n    axios.post(baseURL + id, {\n      title: \"Hello World!\",\n      body: \"This is a new post.\"\n    }).then(response => {\n      setPost(response.data);\n    }).catch(error => {\n      alert(\"Server error: \" + error);\n      setToDoList([]);\n    });\n  };\n  useEffect(() => {\n    fetchList();\n  }, []);\n  const handleToggle = id => {\n    let mapped = todoList.map(task => {\n      return task.id === Number(id) ? {\n        ...task,\n        completed: !task.completed\n      } : {\n        ...task\n      };\n    });\n    setToDoList(mapped);\n  };\n  const handleEdit = id => {\n    // TODO: Routing to editor's page\n    alert(\"https://dummyjson.com/todos/\" + id);\n  };\n  const handleFilter = () => {\n    setChecked(!filter);\n    if (filter) {\n      fetchList();\n    } else {\n      let filtered = todoList.filter(task => {\n        return !task.completed;\n      });\n      setToDoList(filtered);\n    }\n  };\n  const addTask = userInput => {\n    let copy = [...todoList];\n    copy = [...copy, {\n      id: todoList.length + 1,\n      todo: userInput,\n      completed: false,\n      userId: 13\n    }];\n    setToDoList(copy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Show only active tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoList.map(todo => {\n        return /*#__PURE__*/_jsxDEV(Todo, {\n          task: todo,\n          handleToggle: handleToggle,\n          handleEdit: handleEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QVUJ7T0MjQxjHll+hYvG0ytnmzw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","Todo","Form","jsxDEV","_jsxDEV","App","_s","baseURL","todoList","setToDoList","filter","setChecked","fetchList","get","then","response","data","todos","catch","error","alert","completeTask","id","post","title","body","setPost","handleToggle","mapped","map","task","Number","completed","handleEdit","handleFilter","filtered","addTask","userInput","copy","length","todo","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["/Users/denis/Documents/React Projects/test-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\n//components\nimport Header from \"./components/Header\";\nimport Todo from \"./components/Todo\";\nimport Form from './components/Form';\n\nfunction App() {\n  const baseURL = \"https://dummyjson.com/todos/\";\n\n  const [todoList, setToDoList] = useState([]);\n  const [filter, setChecked] = useState(false); \n\n  const fetchList = () => {\n    axios.get(baseURL)\n      .then((response) => {\n        setToDoList(response.data.todos);\n      })\n      .catch(error => {\n        alert(\"Server error: \" + error);\n        setToDoList([])\n      });\n  }\n\n  const completeTask = (id) =>{\n    axios\n      .post(baseURL+id, {\n        title: \"Hello World!\",\n        body: \"This is a new post.\"\n      })\n      .then((response) => {\n        setPost(response.data);\n      })\n      .catch(error => {\n        alert(\"Server error: \" + error);\n        setToDoList([])\n      });\n  }\n\n  useEffect(() => { fetchList() }, []);\n\n  const handleToggle = (id) => {\n    let mapped = todoList.map(task => {\n      return task.id === Number(id) ? { ...task, completed: !task.completed } : { ...task };\n    });\n    setToDoList(mapped);\n  }\n\n  const handleEdit = (id) => {\n    // TODO: Routing to editor's page\n    alert(\"https://dummyjson.com/todos/\" + id);\n  }\n\n  const handleFilter = () => {\n    setChecked(!filter)\n    if (filter) {\n      fetchList();\n    }\n    else {\n      let filtered = todoList.filter(task => { return !task.completed; });\n      setToDoList(filtered);\n    }\n  }\n\n  const addTask = (userInput) => {\n    let copy = [...todoList];\n    copy = [...copy, { id: todoList.length + 1, todo: userInput, completed: false, userId: 13 }];\n    setToDoList(copy);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Form addTask={addTask} />\n      <div>\n        <input type=\"checkbox\" onChange={handleFilter}/>\n        <label>Show only active tasks</label>\n      </div>\n      <ul>\n        {todoList.map(todo => {\n          return (\n            <Todo task={todo} handleToggle={handleToggle} handleEdit={handleEdit} />\n          )\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,OAAO,GAAG,8BAA8B;EAE9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,MAAM,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE5C,MAAMe,SAAS,GAAGA,CAAA,KAAM;IACtBb,KAAK,CAACc,GAAG,CAACN,OAAO,CAAC,CACfO,IAAI,CAAEC,QAAQ,IAAK;MAClBN,WAAW,CAACM,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;IAClC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,KAAK,CAAC,gBAAgB,GAAGD,KAAK,CAAC;MAC/BV,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC;EACN,CAAC;EAED,MAAMY,YAAY,GAAIC,EAAE,IAAI;IAC1BvB,KAAK,CACFwB,IAAI,CAAChB,OAAO,GAACe,EAAE,EAAE;MAChBE,KAAK,EAAE,cAAc;MACrBC,IAAI,EAAE;IACR,CAAC,CAAC,CACDX,IAAI,CAAEC,QAAQ,IAAK;MAClBW,OAAO,CAACX,QAAQ,CAACC,IAAI,CAAC;IACxB,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;MACdC,KAAK,CAAC,gBAAgB,GAAGD,KAAK,CAAC;MAC/BV,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC;EACN,CAAC;EAEDX,SAAS,CAAC,MAAM;IAAEc,SAAS,EAAE;EAAC,CAAC,EAAE,EAAE,CAAC;EAEpC,MAAMe,YAAY,GAAIL,EAAE,IAAK;IAC3B,IAAIM,MAAM,GAAGpB,QAAQ,CAACqB,GAAG,CAACC,IAAI,IAAI;MAChC,OAAOA,IAAI,CAACR,EAAE,KAAKS,MAAM,CAACT,EAAE,CAAC,GAAG;QAAE,GAAGQ,IAAI;QAAEE,SAAS,EAAE,CAACF,IAAI,CAACE;MAAU,CAAC,GAAG;QAAE,GAAGF;MAAK,CAAC;IACvF,CAAC,CAAC;IACFrB,WAAW,CAACmB,MAAM,CAAC;EACrB,CAAC;EAED,MAAMK,UAAU,GAAIX,EAAE,IAAK;IACzB;IACAF,KAAK,CAAC,8BAA8B,GAAGE,EAAE,CAAC;EAC5C,CAAC;EAED,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzBvB,UAAU,CAAC,CAACD,MAAM,CAAC;IACnB,IAAIA,MAAM,EAAE;MACVE,SAAS,EAAE;IACb,CAAC,MACI;MACH,IAAIuB,QAAQ,GAAG3B,QAAQ,CAACE,MAAM,CAACoB,IAAI,IAAI;QAAE,OAAO,CAACA,IAAI,CAACE,SAAS;MAAE,CAAC,CAAC;MACnEvB,WAAW,CAAC0B,QAAQ,CAAC;IACvB;EACF,CAAC;EAED,MAAMC,OAAO,GAAIC,SAAS,IAAK;IAC7B,IAAIC,IAAI,GAAG,CAAC,GAAG9B,QAAQ,CAAC;IACxB8B,IAAI,GAAG,CAAC,GAAGA,IAAI,EAAE;MAAEhB,EAAE,EAAEd,QAAQ,CAAC+B,MAAM,GAAG,CAAC;MAAEC,IAAI,EAAEH,SAAS;MAAEL,SAAS,EAAE,KAAK;MAAES,MAAM,EAAE;IAAG,CAAC,CAAC;IAC5FhC,WAAW,CAAC6B,IAAI,CAAC;EACnB,CAAC;EAED,oBACElC,OAAA;IAAKsC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvC,OAAA,CAACJ,MAAM;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACV3C,OAAA,CAACF,IAAI;MAACkC,OAAO,EAAEA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC1B3C,OAAA;MAAAuC,QAAA,gBACEvC,OAAA;QAAO4C,IAAI,EAAC,UAAU;QAACC,QAAQ,EAAEf;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAChD3C,OAAA;QAAAuC,QAAA,EAAO;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjC,eACN3C,OAAA;MAAAuC,QAAA,EACGnC,QAAQ,CAACqB,GAAG,CAACW,IAAI,IAAI;QACpB,oBACEpC,OAAA,CAACH,IAAI;UAAC6B,IAAI,EAAEU,IAAK;UAACb,YAAY,EAAEA,YAAa;UAACM,UAAU,EAAEA;QAAW;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAE5E,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV;AAACzC,EAAA,CAhFQD,GAAG;AAAA6C,EAAA,GAAH7C,GAAG;AAkFZ,eAAeA,GAAG;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}