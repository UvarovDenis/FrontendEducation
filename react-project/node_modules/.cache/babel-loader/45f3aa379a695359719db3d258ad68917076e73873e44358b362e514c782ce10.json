{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Documents/React Projects/test-app/src/components/TodoList.js\";\nimport React, { useState } from 'react';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = _ref => {\n  let {\n    todoList,\n    handleToggle,\n    handleFilter\n  } = _ref;\n  const handleChange = () => {\n    alert('The checkbox was toggled');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), \"Hide completed\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoList.map(todo => {\n        return /*#__PURE__*/_jsxDEV(Todo, {\n          todo: todo,\n          handleToggle: handleToggle,\n          handleFilter: handleFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","Todo","jsxDEV","_jsxDEV","ToDoList","_ref","todoList","handleToggle","handleFilter","handleChange","alert","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","_c","$RefreshReg$"],"sources":["/Users/denis/Documents/React Projects/test-app/src/components/TodoList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Todo from './Todo';\n\nconst ToDoList = ({ todoList, handleToggle, handleFilter }) => {\n    const handleChange = () => {\n        alert('The checkbox was toggled');\n    }\n    return (\n        <div>\n            <label>\n                <input type=\"checkbox\" onChange={handleChange} />Hide completed\n            </label>\n            <ul>\n                {todoList.map(todo => {\n                    return (\n                        <Todo todo={todo} handleToggle={handleToggle} handleFilter={handleFilter} />\n                    )\n                })}\n            </ul>\n        </div>\n    );\n};\n\nexport default ToDoList;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGC,IAAA,IAA8C;EAAA,IAA7C;IAAEC,QAAQ;IAAEC,YAAY;IAAEC;EAAa,CAAC,GAAAH,IAAA;EACtD,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACvBC,KAAK,CAAC,0BAA0B,CAAC;EACrC,CAAC;EACD,oBACIP,OAAA;IAAAQ,QAAA,gBACIR,OAAA;MAAAQ,QAAA,gBACIR,OAAA;QAAOS,IAAI,EAAC,UAAU;QAACC,QAAQ,EAAEJ;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,kBACrD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACRd,OAAA;MAAAQ,QAAA,EACKL,QAAQ,CAACY,GAAG,CAACC,IAAI,IAAI;QAClB,oBACIhB,OAAA,CAACF,IAAI;UAACkB,IAAI,EAAEA,IAAK;UAACZ,YAAY,EAAEA,YAAa;UAACC,YAAY,EAAEA;QAAa;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAEpF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEd,CAAC;AAACG,EAAA,GAlBIhB,QAAQ;AAoBd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}